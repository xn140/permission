/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-06-10 08:44:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class role_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>角色</title>\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/common/backend_common.jsp", out, false);
      out.write("\n");
      out.write("    <link rel=\"stylesheet\" href=\"/ztree/zTreeStyle.css\" type=\"text/css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"/assets/css/bootstrap-duallistbox.min.css\" type=\"text/css\">\n");
      out.write("    <script type=\"text/javascript\" src=\"/ztree/jquery.ztree.all.min.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"/assets/js/jquery.bootstrap-duallistbox.min.js\"></script>\n");
      out.write("    <style type=\"text/css\">\n");
      out.write("        .bootstrap-duallistbox-container .moveall, .bootstrap-duallistbox-container .removeall {\n");
      out.write("            width: 50%;\n");
      out.write("        }\n");
      out.write("        .bootstrap-duallistbox-container .move, .bootstrap-duallistbox-container .remove {\n");
      out.write("            width: 49%;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body class=\"no-skin\" youdao=\"bind\" style=\"background: white\">\n");
      out.write("<input id=\"gritter-light\" checked=\"\" type=\"checkbox\" class=\"ace ace-switch ace-switch-5\"/>\n");
      out.write("<div class=\"page-header\">\n");
      out.write("    <h1>\n");
      out.write("        角色管理\n");
      out.write("        <small>\n");
      out.write("            <i class=\"ace-icon fa fa-angle-double-right\"></i>\n");
      out.write("            维护角色与用户, 角色与权限关系\n");
      out.write("        </small>\n");
      out.write("    </h1>\n");
      out.write("</div>\n");
      out.write("<div class=\"main-content-inner\">\n");
      out.write("    <div class=\"col-sm-3\">\n");
      out.write("        <div class=\"table-header\">\n");
      out.write("            角色列表&nbsp;&nbsp;\n");
      out.write("            <a class=\"green\" href=\"#\">\n");
      out.write("                <i class=\"ace-icon fa fa-plus-circle orange bigger-130 role-add\"></i>\n");
      out.write("            </a>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"roleList\"></div>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"col-sm-9\">\n");
      out.write("        <div class=\"tabbable\" id=\"roleTab\">\n");
      out.write("            <ul class=\"nav nav-tabs\">\n");
      out.write("                <li class=\"active\">\n");
      out.write("                    <a data-toggle=\"tab\" href=\"#roleAclTab\">\n");
      out.write("                        角色与权限\n");
      out.write("                    </a>\n");
      out.write("                </li>\n");
      out.write("                <li>\n");
      out.write("                    <a data-toggle=\"tab\" href=\"#roleUserTab\">\n");
      out.write("                        角色与用户\n");
      out.write("                    </a>\n");
      out.write("                </li>\n");
      out.write("            </ul>\n");
      out.write("            <div class=\"tab-content\">\n");
      out.write("                <div id=\"roleAclTab\" class=\"tab-pane fade in active\">\n");
      out.write("                    <ul id=\"roleAclTree\" class=\"ztree\"></ul>\n");
      out.write("                    <button class=\"btn btn-info saveRoleAcl\" type=\"button\">\n");
      out.write("                        <i class=\"ace-icon fa fa-check bigger-110\"></i>\n");
      out.write("                        保存\n");
      out.write("                    </button>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div id=\"roleUserTab\" class=\"tab-pane fade\" >\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"box1 col-md-6\">待选用户列表</div>\n");
      out.write("                        <div class=\"box1 col-md-6\">已选用户列表</div>\n");
      out.write("                    </div>\n");
      out.write("                    <select multiple=\"multiple\" size=\"10\" name=\"roleUserList\" id=\"roleUserList\" >\n");
      out.write("                    </select>\n");
      out.write("                    <div class=\"hr hr-16 hr-dotted\"></div>\n");
      out.write("                    <button class=\"btn btn-info saveRoleUser\" type=\"button\">\n");
      out.write("                        <i class=\"ace-icon fa fa-check bigger-110\"></i>\n");
      out.write("                        保存\n");
      out.write("                    </button>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("<div id=\"dialog-role-form\" style=\"display: none;\">\n");
      out.write("    <form id=\"roleForm\">\n");
      out.write("        <table class=\"table table-striped table-bordered table-hover dataTable no-footer\" role=\"grid\">\n");
      out.write("            <tr>\n");
      out.write("                <td><label for=\"roleName\">名称</label></td>\n");
      out.write("                <td>\n");
      out.write("                    <input type=\"text\" name=\"name\" id=\"roleName\" value=\"\" class=\"text ui-widget-content ui-corner-all\">\n");
      out.write("                    <input type=\"hidden\" name=\"id\" id=\"roleId\"/>\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <td><label for=\"roleStatus\">状态</label></td>\n");
      out.write("                <td>\n");
      out.write("                    <select id=\"roleStatus\" name=\"status\" data-placeholder=\"状态\" style=\"width: 150px;\">\n");
      out.write("                        <option value=\"1\">可用</option>\n");
      out.write("                        <option value=\"0\">冻结</option>\n");
      out.write("                    </select>\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            <td><label for=\"roleRemark\">备注</label></td>\n");
      out.write("            <td><textarea name=\"remark\" id=\"roleRemark\" class=\"text ui-widget-content ui-corner-all\" rows=\"3\" cols=\"25\"></textarea></td>\n");
      out.write("            </tr>\n");
      out.write("        </table>\n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("<script id=\"roleListTemplate\" type=\"x-tmpl-mustache\">\n");
      out.write("<ol class=\"dd-list \">\n");
      out.write("    {{#roleList}}\n");
      out.write("        <li class=\"dd-item dd2-item role-name\" id=\"role_{{id}}\" href=\"javascript:void(0)\" data-id=\"{{id}}\">\n");
      out.write("            <div class=\"dd2-content\" style=\"cursor:pointer;\">\n");
      out.write("            {{name}}\n");
      out.write("            <span style=\"float:right;\">\n");
      out.write("                <a class=\"green role-edit\" href=\"#\" data-id=\"{{id}}\" >\n");
      out.write("                    <i class=\"ace-icon fa fa-pencil bigger-100\"></i>\n");
      out.write("                </a>\n");
      out.write("                &nbsp;\n");
      out.write("                <a class=\"red role-delete\" href=\"#\" data-id=\"{{id}}\" data-name=\"{{name}}\">\n");
      out.write("                    <i class=\"ace-icon fa fa-trash-o bigger-100\"></i>\n");
      out.write("                </a>\n");
      out.write("            </span>\n");
      out.write("            </div>\n");
      out.write("        </li>\n");
      out.write("    {{/roleList}}\n");
      out.write("</ol>\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script id=\"selectedUsersTemplate\" type=\"x-tmpl-mustache\">\n");
      out.write("{{#userList}}\n");
      out.write("    <option value=\"{{id}}\" selected=\"selected\">{{username}}</option>\n");
      out.write("{{/userList}}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script id=\"unSelectedUsersTemplate\" type=\"x-tmpl-mustache\">\n");
      out.write("{{#userList}}\n");
      out.write("    <option value=\"{{id}}\">{{username}}</option>\n");
      out.write("{{/userList}}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    $(function () {\n");
      out.write("        var roleMap = {};\n");
      out.write("        var lastRoleId = -1;\n");
      out.write("        var selectFirstTab = true;\n");
      out.write("        var hasMultiSelect = false;\n");
      out.write("        \n");
      out.write("        var roleListTemplate = $(\"#roleListTemplate\").html();\n");
      out.write("        Mustache.parse(roleListTemplate);\n");
      out.write("        var selectedUsersTemplate = $(\"#selectedUsersTemplate\").html();\n");
      out.write("        Mustache.parse(selectedUsersTemplate);\n");
      out.write("        var unSelectedUsersTemplate = $(\"#unSelectedUsersTemplate\").html();\n");
      out.write("        Mustache.parse(unSelectedUsersTemplate);\n");
      out.write("        \n");
      out.write("        loadRoleList();\n");
      out.write("\n");
      out.write("        // zTree\n");
      out.write("        <!-- 树结构相关 开始 -->\n");
      out.write("        var zTreeObj = [];\n");
      out.write("        var modulePrefix = 'm_';\n");
      out.write("        var aclPrefix = 'a_';\n");
      out.write("        var nodeMap = {};\n");
      out.write("\n");
      out.write("        var setting = {\n");
      out.write("            check: {\n");
      out.write("                enable: true,\n");
      out.write("                chkDisabledInherit: true,\n");
      out.write("                chkboxType: {\"Y\": \"ps\", \"N\": \"ps\"}, //auto check 父节点 子节点\n");
      out.write("                autoCheckTrigger: true\n");
      out.write("            },\n");
      out.write("            data: {\n");
      out.write("                simpleData: {\n");
      out.write("                    enable: true,\n");
      out.write("                    rootPId: 0\n");
      out.write("                }\n");
      out.write("            },\n");
      out.write("            callback: {\n");
      out.write("                onClick: onClickTreeNode\n");
      out.write("            }\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        function onClickTreeNode(e, treeId, treeNode) { // 绑定单击事件\n");
      out.write("            var zTree = $.fn.zTree.getZTreeObj(\"roleAclTree\");\n");
      out.write("            zTree.expandNode(treeNode);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function loadRoleList() {\n");
      out.write("            $.ajax({\n");
      out.write("                url: \"/sys/role/list.json\",\n");
      out.write("                success: function (result) {\n");
      out.write("                    if (result.ret) {\n");
      out.write("                        var rendered = Mustache.render(roleListTemplate, {roleList: result.data});\n");
      out.write("                        $(\"#roleList\").html(rendered);\n");
      out.write("                        bindRoleClick();\n");
      out.write("                        $.each(result.data, function(i, role) {\n");
      out.write("                            roleMap[role.id] = role;\n");
      out.write("                        });\n");
      out.write("                    } else {\n");
      out.write("                        showMessage(\"加载角色列表\", result.msg, false);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("        function bindRoleClick() {\n");
      out.write("            $(\".role-edit\").click(function (e) {\n");
      out.write("                e.preventDefault();\n");
      out.write("                e.stopPropagation();\n");
      out.write("                var roleId = $(this).attr(\"data-id\");\n");
      out.write("                $(\"#dialog-role-form\").dialog({\n");
      out.write("                    model: true,\n");
      out.write("                    title: \"修改角色\",\n");
      out.write("                    open: function(event, ui) {\n");
      out.write("                        $(\".ui-dialog-titlebar-close\", $(this).parent()).hide();\n");
      out.write("                        $(\"#roleForm\")[0].reset();\n");
      out.write("                        var targetRole = roleMap[roleId];\n");
      out.write("                        if (targetRole) {\n");
      out.write("                            $(\"#roleId\").val(roleId);\n");
      out.write("                            $(\"#roleName\").val(targetRole.name);\n");
      out.write("                            $(\"#roleStatus\").val(targetRole.status);\n");
      out.write("                            $(\"#roleRemark\").val(targetRole.remark);\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                    buttons : {\n");
      out.write("                        \"修改\": function(e) {\n");
      out.write("                            e.preventDefault();\n");
      out.write("                            updateRole(false, function (data) {\n");
      out.write("                                $(\"#dialog-role-form\").dialog(\"close\");\n");
      out.write("                            }, function (data) {\n");
      out.write("                                showMessage(\"修改角色\", data.msg, false);\n");
      out.write("                            })\n");
      out.write("                        },\n");
      out.write("                        \"取消\": function () {\n");
      out.write("                            $(\"#dialog-role-form\").dialog(\"close\");\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                })\n");
      out.write("            });\n");
      out.write("            $(\".role-name\").click(function (e) {\n");
      out.write("               e.preventDefault();\n");
      out.write("               e.stopPropagation();\n");
      out.write("               var roleId = $(this).attr(\"data-id\");\n");
      out.write("               handleRoleSelected(roleId);\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function handleRoleSelected(roleId) {\n");
      out.write("            if (lastRoleId != -1) {\n");
      out.write("                var lastRole = $(\"#role_\" + lastRoleId + \" .dd2-content:first\");\n");
      out.write("                lastRole.removeClass(\"btn-yellow\");\n");
      out.write("                lastRole.removeClass(\"no-hover\");\n");
      out.write("            }\n");
      out.write("            var currentRole = $(\"#role_\" + roleId + \" .dd2-content:first\");\n");
      out.write("            currentRole.addClass(\"btn-yellow\");\n");
      out.write("            currentRole.addClass(\"no-hover\");\n");
      out.write("            lastRoleId = roleId;\n");
      out.write("\n");
      out.write("            $('#roleTab a:first').trigger('click');\n");
      out.write("            if (selectFirstTab) {\n");
      out.write("                loadRoleAcl(roleId);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function loadRoleAcl(selectedRoleId) {\n");
      out.write("            if (selectedRoleId == -1) {\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            $.ajax({\n");
      out.write("                url: \"/sys/role/roleTree.json\",\n");
      out.write("                data : {\n");
      out.write("                    roleId: selectedRoleId\n");
      out.write("                },\n");
      out.write("                type: 'POST',\n");
      out.write("                success: function (result) {\n");
      out.write("                    if (result.ret) {\n");
      out.write("                        renderRoleTree(result.data);\n");
      out.write("                    } else {\n");
      out.write("                        showMessage(\"加载角色权限数据\", result.msg, false);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function getTreeSelectedId() {\n");
      out.write("            var treeObj = $.fn.zTree.getZTreeObj(\"roleAclTree\");\n");
      out.write("            var nodes = treeObj.getCheckedNodes(true);\n");
      out.write("            var v = \"\";\n");
      out.write("            for(var i = 0; i < nodes.length; i++) {\n");
      out.write("                if(nodes[i].id.startsWith(aclPrefix)) {\n");
      out.write("                    v += \",\" + nodes[i].dataId;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            return v.length > 0 ? v.substring(1): v;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function renderRoleTree(aclModuleList) {\n");
      out.write("            zTreeObj = [];\n");
      out.write("            recursivePrepareTreeData(aclModuleList);\n");
      out.write("            for(var key in nodeMap) {\n");
      out.write("                zTreeObj.push(nodeMap[key]);\n");
      out.write("            }\n");
      out.write("            $.fn.zTree.init($(\"#roleAclTree\"), setting, zTreeObj);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function recursivePrepareTreeData(aclModuleList) {\n");
      out.write("            // prepare nodeMap\n");
      out.write("            if (aclModuleList && aclModuleList.length > 0) {\n");
      out.write("                $(aclModuleList).each(function(i, aclModule) {\n");
      out.write("                    var hasChecked = false;\n");
      out.write("                    if (aclModule.aclList && aclModule.aclList.length > 0) {\n");
      out.write("                        $(aclModule.aclList).each(function(i, acl) {\n");
      out.write("                            zTreeObj.push({\n");
      out.write("                                id: aclPrefix + acl.id,\n");
      out.write("                                pId: modulePrefix + acl.aclModuleId,\n");
      out.write("                                name: acl.name + ((acl.type == 1) ? '(菜单)' : ''),\n");
      out.write("                                chkDisabled: !acl.hasAcl,\n");
      out.write("                                checked: acl.checked,\n");
      out.write("                                dataId: acl.id\n");
      out.write("                            });\n");
      out.write("                            if(acl.checked) {\n");
      out.write("                                hasChecked = true;\n");
      out.write("                            }\n");
      out.write("                        });\n");
      out.write("                    }\n");
      out.write("                    if ((aclModule.aclModuleList && aclModule.aclModuleList.length > 0) ||\n");
      out.write("                        (aclModule.aclList && aclModule.aclList.length > 0)) {\n");
      out.write("                        nodeMap[modulePrefix + aclModule.id] = {\n");
      out.write("                            id : modulePrefix + aclModule.id,\n");
      out.write("                            pId: modulePrefix + aclModule.parentId,\n");
      out.write("                            name: aclModule.name,\n");
      out.write("                            open: hasChecked\n");
      out.write("                        };\n");
      out.write("                        var tempAclModule = nodeMap[modulePrefix + aclModule.id];\n");
      out.write("                        while(hasChecked && tempAclModule) {\n");
      out.write("                            if(tempAclModule) {\n");
      out.write("                                nodeMap[tempAclModule.id] = {\n");
      out.write("                                    id: tempAclModule.id,\n");
      out.write("                                    pId: tempAclModule.pId,\n");
      out.write("                                    name: tempAclModule.name,\n");
      out.write("                                    open: true\n");
      out.write("                                }\n");
      out.write("                            }\n");
      out.write("                            tempAclModule = nodeMap[tempAclModule.pId];\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                    recursivePrepareTreeData(aclModule.aclModuleList);\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        $(\".role-add\").click(function () {\n");
      out.write("            $(\"#dialog-role-form\").dialog({\n");
      out.write("                model: true,\n");
      out.write("                title: \"新增角色\",\n");
      out.write("                open: function(event, ui) {\n");
      out.write("                    $(\".ui-dialog-titlebar-close\", $(this).parent()).hide();\n");
      out.write("                    $(\"#roleForm\")[0].reset();\n");
      out.write("                },\n");
      out.write("                buttons : {\n");
      out.write("                    \"添加\": function(e) {\n");
      out.write("                        e.preventDefault();\n");
      out.write("                        updateRole(true, function (data) {\n");
      out.write("                            $(\"#dialog-role-form\").dialog(\"close\");\n");
      out.write("                        }, function (data) {\n");
      out.write("                            showMessage(\"新增角色\", data.msg, false);\n");
      out.write("                        })\n");
      out.write("                    },\n");
      out.write("                    \"取消\": function () {\n");
      out.write("                        $(\"#dialog-role-form\").dialog(\"close\");\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            })\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        $(\".saveRoleAcl\").click(function (e) {\n");
      out.write("            e.preventDefault();\n");
      out.write("            if (lastRoleId == -1) {\n");
      out.write("                showMessage(\"保存角色与权限点的关系\", \"请现在左侧选择需要操作的角色\", false);\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            $.ajax({\n");
      out.write("                url: \"/sys/role/changeAcls.json\",\n");
      out.write("                data: {\n");
      out.write("                    roleId: lastRoleId,\n");
      out.write("                    aclIds: getTreeSelectedId()\n");
      out.write("                },\n");
      out.write("                type: 'POST',\n");
      out.write("                success: function (result) {\n");
      out.write("                    if (result.ret) {\n");
      out.write("                        showMessage(\"保存角色与权限点的关系\", \"操作成功\", false);\n");
      out.write("                    } else {\n");
      out.write("                        showMessage(\"保存角色与权限点的关系\", result.msg, false);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        function updateRole(isCreate, successCallback, failCallback) {\n");
      out.write("            $.ajax({\n");
      out.write("                url: isCreate ? \"/sys/role/save.json\" : \"/sys/role/update.json\",\n");
      out.write("                data: $(\"#roleForm\").serializeArray(),\n");
      out.write("                type: 'POST',\n");
      out.write("                success: function(result) {\n");
      out.write("                    if (result.ret) {\n");
      out.write("                        loadRoleList();\n");
      out.write("                        if (successCallback) {\n");
      out.write("                            successCallback(result);\n");
      out.write("                        }\n");
      out.write("                    } else {\n");
      out.write("                        if (failCallback) {\n");
      out.write("                            failCallback(result);\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            })\n");
      out.write("        }\n");
      out.write("        $(\"#roleTab a[data-toggle='tab']\").on(\"shown.bs.tab\", function(e) {\n");
      out.write("            if(lastRoleId == -1) {\n");
      out.write("                showMessage(\"加载角色关系\",\"请先在左侧选择操作的角色\", false);\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            if (e.target.getAttribute(\"href\") == '#roleAclTab') {\n");
      out.write("                selectFirstTab = true;\n");
      out.write("                loadRoleAcl(lastRoleId);\n");
      out.write("            } else {\n");
      out.write("                selectFirstTab = false;\n");
      out.write("                loadRoleUser(lastRoleId);\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        function loadRoleUser(selectedRoleId) {\n");
      out.write("            $.ajax({\n");
      out.write("                url: \"/sys/role/users.json\",\n");
      out.write("                data: {\n");
      out.write("                    roleId: selectedRoleId\n");
      out.write("                },\n");
      out.write("                type: 'POST',\n");
      out.write("                success: function (result) {\n");
      out.write("                    if (result.ret) {\n");
      out.write("                        var renderedSelect = Mustache.render(selectedUsersTemplate, {userList: result.data.selected});\n");
      out.write("                        var renderedUnSelect = Mustache.render(unSelectedUsersTemplate, {userList: result.data.unselected});\n");
      out.write("                        $(\"#roleUserList\").html(renderedSelect + renderedUnSelect);\n");
      out.write("\n");
      out.write("                        if(!hasMultiSelect) {\n");
      out.write("                            $('select[name=\"roleUserList\"]').bootstrapDualListbox({\n");
      out.write("                                showFilterInputs: false,\n");
      out.write("                                moveOnSelect: false,\n");
      out.write("                                infoText: false\n");
      out.write("                            });\n");
      out.write("                            hasMultiSelect = true;\n");
      out.write("                        } else {\n");
      out.write("                            $('select[name=\"roleUserList\"]').bootstrapDualListbox('refresh', true);\n");
      out.write("                        }\n");
      out.write("                    } else {\n");
      out.write("                        showMessage(\"加载角色用户数据\", result.msg, false);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        $(\".saveRoleUser\").click(function (e) {\n");
      out.write("            e.preventDefault();\n");
      out.write("            if (lastRoleId == -1) {\n");
      out.write("                showMessage(\"保存角色与用户的关系\", \"请现在左侧选择需要操作的角色\", false);\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            $.ajax({\n");
      out.write("                url: \"/sys/role/changeUsers.json\",\n");
      out.write("                data: {\n");
      out.write("                    roleId: lastRoleId,\n");
      out.write("                    userIds: $(\"#roleUserList\").val() ? $(\"#roleUserList\").val().join(\",\") : ''\n");
      out.write("                },\n");
      out.write("                type: 'POST',\n");
      out.write("                success: function (result) {\n");
      out.write("                    if (result.ret) {\n");
      out.write("                        showMessage(\"保存角色与用户的关系\", \"操作成功\", false);\n");
      out.write("                    } else {\n");
      out.write("                        showMessage(\"保存角色与用户的关系\", result.msg, false);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
